import java.text.SimpleDateFormat
import java.util.TimeZone


//Jar 
apply plugin: "net.nemerosa.versioning"
versioning {  
  noWarningOnDirty = true
}

ext { 
  pjVersion = "3.0.0"
  pjGroupName = "com.leon.solid"

  //List of all dependencies.
  versions = [
    jsr305: "3.0.2",
    cglib: "3.1",
    spock: "1.3-groovy-2.4",
    usertype: "6.0.1.GA",
    hibernateValidator: "6.0.16.Final",
    inject: "1",
    jspApi: "2.3.1",
    sitemesh: "3.0.1",
    dozer : '5.5.1',
    jasperreports: "6.9.0",
    itext: "2.1.7",
    poi: "4.0.1",
    barcode4j: "2.1",
    barbecue: "1.5-beta1",
    zxing: "3.2.1",
    batik: "1.11",
    pdfbox: "2.0.16",
    pdfjs: "1.0",
    viy: "1.1.3",
    echarts: "4.1.0",
    javaxInject: "1"
  ] 
  
  def buildTimeAndDate = new Date()
  def sf = new SimpleDateFormat('yyyy-MM-dd HH:mm:ss.SSSZ')
  def snapShoot = new SimpleDateFormat('yyMMddHHmm')
  sf.setTimeZone(TimeZone.getTimeZone("UTC")) 
  snapShoot.setTimeZone(TimeZone.getTimeZone("UTC")) 

  //
  buildDateTime = System.properties['BUILD_DATETIME'] ?: sf.format(buildTimeAndDate)
  
  //Change append timestamp to the pjVersion
  def tail = "." + snapShoot.format(buildTimeAndDate) 
  pjVersion = pjVersion + ((System.env['IS_RELEASE'] || System.properties['IS_RELEASE']) ? "" : tail)
  //println "Version of project:$pjVersion"

  // 
  def tmpVer = ""
  try {
     tmpVer = versioning ? versioning.info.full : ""
  }catch(Exception ex) { 
  }
  jarBuildVersion = System.properties['BUILD_VERSION']?: tmpVer
}   

//Import command functions.
apply from: "$rootProject.projectDir/gradle/scripts/functions.gradle"